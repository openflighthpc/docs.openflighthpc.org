heat_template_version: 2021-04-16
parameters:
  clustername:
    type: string
    label: Cluster Name
    description: The name to give the cluster

  key-name:
    type: string
    label: Name of a KeyPair to use for 'flight' user access

  solo-image:
    type: string
    label: Flight Solo Image ID
    default: "Flight Solo 2024.1"

resources:
  external-route:
    type: OS::Neutron::Router
    depends_on: cluster-network-pri
    properties:
      name: { list_join: ['-', [ {get_param: clustername}, 'ext-route']] }
      external_gateway_info:
        network: "external1"

  external-route-iface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: external-route }
      subnet: { get_resource: cluster-network-pri }

  cluster-network:
    type: OS::Neutron::Net
    properties:
      name: { list_join: ['-', [{ get_param: clustername }, 'network']] }

  cluster-network-pri:
    type: OS::Neutron::Subnet
    properties:
      name: { list_join: ['-', [ {get_param: clustername}, 'network-pri']] }
      network: { get_resource: cluster-network }
      cidr: '10.100.0.0/16'
      ip_version: 4

  cluster-sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { list_join: ['-', [ {get_param: clustername}, 'network-pri-sg']] }
      rules:
        - direction: egress
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          remote_ip_prefix: '10.100.0.0/16'
        - direction: ingress
          protocol: icmp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          port_range_min: 22
          port_range_max: 22
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          port_range_min: 80
          port_range_max: 80
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          port_range_min: 443
          port_range_max: 443
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          port_range_min: 5901
          port_range_max: 5911
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0

  login-pri-port:
    type: OS::Neutron::Port
    depends_on: cluster-network-pri
    properties:
      name: { list_join: ['-', ['login1', 'pri', { get_param: clustername }]] }
      network: { get_resource: cluster-network }
      security_groups:
        - { get_resource: cluster-sg }
      fixed_ips:
        - subnet: { get_resource: cluster-network-pri }
          ip_address: '10.100.0.101'

  login:
    type: OS::Nova::Server
    properties:
      name: { list_join: ['.', ['login1', { get_param: clustername }, 'alces.network']] }
      flavor: c1.small
      key_name: { get_param: key-name }
      admin_user: flight
      networks:
          - port: { get_resource: login-pri-port }
      block_device_mapping_v2:
        - volume_id: { get_resource: login-vol }
          boot_index: 0
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            fqdn: login1.$clustername.alces.network
            write_files:
              - content: |
                  SHAREPUBKEY=true
                  AUTOPARSEMATCH=$clustername
                  PROFILE_ANSWERS='{ "cluster_type": "openflight-slurm-multinode", "cluster_name": "$clustername" }'
                  AUTOAPPLY="login: login, node: compute"
                  AUTOREMOVE=true
                path: /opt/flight/cloudinit.in
                permissions: '0600'
                owner: root:root
              - content: |
                  # Generate password for flight user
                  FLIGHTPASS=$(cat /dev/urandom |tr -dc _A-Z-a-z-0-9 |head -c 8)
                  echo "$FLIGHTPASS" > /root/flight_user_pass.txt
                  # Ensure Flight Profile uses generated password
                  /opt/flight/bin/flight profile configure --answers "{ \"cluster_type\": \"openflight-slurm-multinode\", \"default_password\": \"$FLIGHTPASS\" }" --accept-defaults
                path: /var/lib/firstrun/scripts/00-generate-passwords.bash
                permissions: '0600'
                owner: root:root
          params:
            $clustername: { get_param: clustername }

  login-vol:
    type: OS::Cinder::Volume
    properties:
      name: { list_join: ['-', ['login1', { get_param: clustername }, 'disk']] }
      image: { get_param: solo-image }
      size: 100

  login-ip:
     type: "OS::Neutron::FloatingIP"
     properties:
        floating_network_id: "external1"
        port_id: {get_resource: login-pri-port}
